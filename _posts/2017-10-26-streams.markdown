# Streams

List<Person> erwachsene = personen.stream(). // Erzeugen
  filter(Person::istErwachsen). // Verarbeiten
  collect(Collectors.toList()); // Terminieren


## Erzeugen

String[] namenArray = { "Karl", "Ralph", "Andi",
        "Andy", "Mike" };
  List<String> namen = Arrays.asList(namenArray);
  Stream<String> namenStream = namen.stream();

Stream<String> namenStream = Arrays.stream(namenArray);


Stream<String> namen = Stream.of("Jan", "Hein", "Klaas");
  Stream<Integer> zahlen = Stream.of(1, 4, 7, 7, 9, 7, 2);


IntStream zahlen = IntStream.range(0, 100);


IntStream zeichen = "Dies ist ein Text".chars();

## Verarbeiten

map()
flatMap()
peek()

sorted()
limit()
skip()


## Ergebnis
forEach()
toArray()
collect()
reduce()
min()
max()
count()
anyMatch()
findFirst()


